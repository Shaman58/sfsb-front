{
  // Place your Рабочая область sfsb snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "VUE component": {
    "scope": "vue,javascript,typescript, sass, css, html",
    "prefix": "vcomp",
    "body": [
      "<template lang=\"pug\">",
      "v-container",
      "",
      "</template>",
      "",
      "<script setup lang=\"ts\">",
      "",
      "</script>",
      "",
      "<style lang=\"sass\" scoped>",
      "",
      "</style>"
    ],
    "description": "VUE component"
  },
  "PINIA store": {
    "scope": "vue,javascript,typescript",
    "prefix": "piniac",
    "body": [
      "import {defineStore} from \"pinia\";",
      "import api from \"@/api/instance\";",
      "import { useToast } from \"vue-toast-notification\";",
      "import { Ref, ref } from \"vue\";",
      "",
      "const toast = useToast();",
      "",
      "export const use$1Store = defineStore(\"roles\", ()=>{",
      "",
      "return { }",
      "});"
    ]
  },
  "console.log": {
    "scope": "vue,javascript,typescript",
    "prefix": "clg",
    "body": [
      "console.log($1)"
    ]
  },
  "defineProps: {
      "scope": "vue,javascript,typescript, sass, css, html",
      "prefix": "dfp",
      "body": [
        "const props = defineProps<{$1}>()",
        "const {$2} = toRefs(props)"
      ],
      "description": "VUE component"
    },
}
